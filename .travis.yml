language: python
python:
  - "2.6"
  - "2.7"
node_js:
  - "0.10"
env:
  - VUMITEST_REDIS_DB=1 VUMIGO_TEST_DB=postgres VUMI_TEST_TIMEOUT=10
services:
  - postgresql
  - redis-server
before_install:
  # We need Riak 1.4, so we add Basho's repo and install from there.
  # Additionally, we remove existing Riak data and replace the config with ours.
  - sudo service riak stop
  - "curl http://apt.basho.com/gpg/basho.apt.key | sudo apt-key add -"
  - sudo bash -c "echo deb http://apt.basho.com $(lsb_release -sc) main > /etc/apt/sources.list.d/basho.list"
  - sudo apt-get -qq update
  - sudo apt-get install -qq -y --force-yes riak=1.4.12-1
  - sudo rm -rf /var/lib/riak/*
  - sudo cp utils/app.config /etc/riak/app.config
  - sudo service riak start
  # We need the protobuf-compiler so we can install Riak client libraries.
  - sudo apt-get install -qq protobuf-compiler
install:
  - "pip install -r requirements.pip --use-wheel"
  - "pip install -r requirements-dev.pip --use-wheel"
  - "pip install overalls"
  - "npm install"
before_script:
  - "psql -c \"create user go with createdb password 'go';\" -U postgres"
  - "psql -c 'create database go owner go;' -U postgres"
  - "export PYTHONPATH=."
  - "django-admin.py syncdb --migrate --noinput --settings=go.testsettings"
  - "pip list"
script:
  - ./run-tests.sh
  - grunt test
after_script:
  - "psql -c 'drop database go;' -U postgres"
  - "psql -c 'drop user go;' -U postgres"
after_success:
  - overalls --py --lcov mochacov.lcov --lcov coverage/*/lcov.info
